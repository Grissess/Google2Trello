#Values in <angle brackets> must be filled in for this script to work.
#Also, you may want to change the "From:" and "To:" field in the email.txt file in order to ensure that you get notifications of failure (due to error). This only happens when (1) you run job.sh, either from the command line or from a cron job, and (2) you have sendmail set up properly (I'm using the sSMTP version and passing the message to a bona fide mail forwarder). If both of these conditions are not met, you won't get any email traffic at all.
#To disable this feature, don't run job.sh in cron or in the shell; run "python google2trello.py" instead. Output will be as usual to stdout and stderr. (This is recommended for debugging purposes.)
[Google]
#The google credentials of the user account that can access the spreadsheet.
user=<USERNAME@DOMAIN>
password=<S3CRETPASSW0RD>
#The EXACT name of the spreadsheet.
spreadsheet=<SPREADSHEETNAME>
#The EXACT name of the sheet in the spreadsheet.
sheet=<SPREADSHEET>

[Trello]
#An app key, gotten from https://trello.com/1/appKey/generate while logged into your Trello account.
key=<TRELLOAPPKEY>
#An OAuth token gotten from https://trello.com/1/connect?key=...&expiration=never&name=python.google2trello&response_type=token&scope=read,write with the ellipsis in the "key=..." replaced with the key above.
token=<TRELLOOAUTHTOKEN>
#The EXACT name of the board.
board=<TRELLOBOARDNAME>
#The EXACT name of the list in this board
list=<DEFAULTLIST>

[Transfer]
#Column names:
#In your spreadsheet, the first row is assumed to contain column names. When writing templates or selecting them in the attribute properties below, all whitespace and punctuation will be removed from this name, and it will be converted to lowercase. So, for example:
#"Column Name" --> "columnname"
#"Is This A Question?" --> "isthisaquestion"
#"Color" --> "color"
#"C" --> "c"
#The name of a text file that contains the template that will be used as the card description. In here, every %(...)s will be replaced with a value by the name of the column "..." in the spreadsheet. If you're confused, see the sample format files.
#If the key is specified as format_column_value=..., then that format will be used when that column is equal to that value, parsed as with the column name (restricted to only letters and digits, converted to lowercase).
#All of these values need to be changed to suit your needs--you can add or remove them as well, depending on your needs. The general use is to have one list for each type of submision (as below), and to switch based on the same form response that would normally be used to show a different form.
#It is *IMPERATIVE* that you ensure that the column names in the spreadsheet are identifiable, since this script does NOT identify by column number. Otherwise, undefined behavior may result.
format_type_events=format_event.txt
format_type_panel=format_panel.txt
format_type_justasuggestion=format_suggestion.txt
list_type_events=Event Submissions (REVIEW)
list_type_panel=Panel Submissions (REVIEW)
list_type_justasuggestion=Suggestions (REVIEW)
formatfile=format.txt
#The format string designating the column or columns that contain the value that should be included as the card's name (see above for formatting specs; in general, you probably only want one or two %(...)s escapes here). This value MUST be unique for EVERY card, otherwise new cards will not be created to correspond to new rows. This may require manual intervention on your part if this cannot be enforced in the spreadsheet's/form's architecture.
#Note: it's now possible to get warnings when this happens. See dups.sh for a quick command-line script that scans job.sh output for duplicate entries.
name=%(title)s
